window.location /window.setInterval
XMLHttpRequest
prototypal inheritance
prototype in javascript
JS types combos:
https://www.w3schools.com/js/js_output.asp
Number + Number -> Addition
Boolean + Number -> Addition
Boolean + Number -> Addition
Number + String -> Concatenation
String + Boolean -> Concatenation
String + String -> Concatenation
If you re-declare a JavaScript variable, it will not lose its existing value.
JavaScript evaluates expressions from left to right. so 16 + 4 + "Volvo"; will produce 20Volvo while  "Volvo" + 16 + 4 will produce Volvo164
You can use quotes inside a string, as long as they don't match the quotes surrounding the string:
Unfortunately, in JavaScript, the data type of null is an object.You can consider it a bug in JavaScript that typeof null is an object. It should be null.
Difference Between Undefined and Null
If you access a method without the () parentheses, it will return the function definition
=== VS == 

var x = "John";             
var y = new String("John");
var z = new String("John");

// (x == y) is true because x and y have equal values
// (x === y) is false because x and y have different types (string and object)
// (z == y) is false because x and y are different objects
// (z === y) is false because x and y are different objects
indexOf() VS search()
Substring VS slice - 
JavaScript will try to convert strings to numbers in all numeric operations
Infinity, NaN = type number
