Singleton:https://csharpindepth.com/articles/singleton
Factory : Decides which class to instantiate.Dont direvctly call the constructor. Product, ConcreteCreator , Creator , ConcreteProduct 
https://dev.to/gary_woodfine/how-to-use-factory-method-design-pattern-in-c-3ia3
Prototype
Command pattern : All requests are treated as objects
Ptototype pattern: clone existing object
Dependency injection pattern & IOC -allows us to develop loosely coupled code. DI is a great way to reduce tight coupling between software components
he Dependency Injection pattern uses a builder object to initialize objects and provide the required dependencies to the object means it allows you to "inject" a dependency from outside the class.


https://www.dotnettricks.com/learn/dependencyinjection/implementation-of-dependency-injection-pattern-in-csharp

Inversion of Control (IoC) means to create instances of dependencies first and latter instance of a class (optionally injecting them through constructor), instead of creating an instance of the class first and then the class instance creating instances of dependencies.
